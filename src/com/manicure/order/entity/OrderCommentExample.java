package com.manicure.order.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;

public class OrderCommentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public OrderCommentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andOrderIdIsNull() {
			addCriterion("order_id is null");
			return (Criteria) this;
		}

		public Criteria andOrderIdIsNotNull() {
			addCriterion("order_id is not null");
			return (Criteria) this;
		}

		public Criteria andOrderIdEqualTo(Integer value) {
			addCriterion("order_id =", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotEqualTo(Integer value) {
			addCriterion("order_id <>", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThan(Integer value) {
			addCriterion("order_id >", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("order_id >=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThan(Integer value) {
			addCriterion("order_id <", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
			addCriterion("order_id <=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdIn(List<Integer> values) {
			addCriterion("order_id in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotIn(List<Integer> values) {
			addCriterion("order_id not in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdBetween(Integer value1, Integer value2) {
			addCriterion("order_id between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
			addCriterion("order_id not between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andStarsIsNull() {
			addCriterion("stars is null");
			return (Criteria) this;
		}

		public Criteria andStarsIsNotNull() {
			addCriterion("stars is not null");
			return (Criteria) this;
		}

		public Criteria andStarsEqualTo(BigDecimal value) {
			addCriterion("stars =", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsNotEqualTo(BigDecimal value) {
			addCriterion("stars <>", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsGreaterThan(BigDecimal value) {
			addCriterion("stars >", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("stars >=", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsLessThan(BigDecimal value) {
			addCriterion("stars <", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsLessThanOrEqualTo(BigDecimal value) {
			addCriterion("stars <=", value, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsIn(List<BigDecimal> values) {
			addCriterion("stars in", values, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsNotIn(List<BigDecimal> values) {
			addCriterion("stars not in", values, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("stars between", value1, value2, "stars");
			return (Criteria) this;
		}

		public Criteria andStarsNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("stars not between", value1, value2, "stars");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreIsNull() {
			addCriterion("profnal_score is null");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreIsNotNull() {
			addCriterion("profnal_score is not null");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreEqualTo(BigDecimal value) {
			addCriterion("profnal_score =", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreNotEqualTo(BigDecimal value) {
			addCriterion("profnal_score <>", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreGreaterThan(BigDecimal value) {
			addCriterion("profnal_score >", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("profnal_score >=", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreLessThan(BigDecimal value) {
			addCriterion("profnal_score <", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreLessThanOrEqualTo(BigDecimal value) {
			addCriterion("profnal_score <=", value, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreIn(List<BigDecimal> values) {
			addCriterion("profnal_score in", values, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreNotIn(List<BigDecimal> values) {
			addCriterion("profnal_score not in", values, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("profnal_score between", value1, value2, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andProfnalScoreNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("profnal_score not between", value1, value2, "profnalScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreIsNull() {
			addCriterion("move_score is null");
			return (Criteria) this;
		}

		public Criteria andMoveScoreIsNotNull() {
			addCriterion("move_score is not null");
			return (Criteria) this;
		}

		public Criteria andMoveScoreEqualTo(BigDecimal value) {
			addCriterion("move_score =", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreNotEqualTo(BigDecimal value) {
			addCriterion("move_score <>", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreGreaterThan(BigDecimal value) {
			addCriterion("move_score >", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("move_score >=", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreLessThan(BigDecimal value) {
			addCriterion("move_score <", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreLessThanOrEqualTo(BigDecimal value) {
			addCriterion("move_score <=", value, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreIn(List<BigDecimal> values) {
			addCriterion("move_score in", values, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreNotIn(List<BigDecimal> values) {
			addCriterion("move_score not in", values, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("move_score between", value1, value2, "moveScore");
			return (Criteria) this;
		}

		public Criteria andMoveScoreNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("move_score not between", value1, value2, "moveScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreIsNull() {
			addCriterion("punctual_score is null");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreIsNotNull() {
			addCriterion("punctual_score is not null");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreEqualTo(BigDecimal value) {
			addCriterion("punctual_score =", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreNotEqualTo(BigDecimal value) {
			addCriterion("punctual_score <>", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreGreaterThan(BigDecimal value) {
			addCriterion("punctual_score >", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("punctual_score >=", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreLessThan(BigDecimal value) {
			addCriterion("punctual_score <", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreLessThanOrEqualTo(BigDecimal value) {
			addCriterion("punctual_score <=", value, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreIn(List<BigDecimal> values) {
			addCriterion("punctual_score in", values, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreNotIn(List<BigDecimal> values) {
			addCriterion("punctual_score not in", values, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("punctual_score between", value1, value2, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andPunctualScoreNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("punctual_score not between", value1, value2, "punctualScore");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return (Criteria) this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("description in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("description not in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("`time` is null");
			return (Criteria) this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("`time` is not null");
			return (Criteria) this;
		}

		public Criteria andTimeEqualTo(Date value) {
			addCriterion("`time` =", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotEqualTo(Date value) {
			addCriterion("`time` <>", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThan(Date value) {
			addCriterion("`time` >", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("`time` >=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThan(Date value) {
			addCriterion("`time` <", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThanOrEqualTo(Date value) {
			addCriterion("`time` <=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeIn(List<Date> values) {
			addCriterion("`time` in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotIn(List<Date> values) {
			addCriterion("`time` not in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeBetween(Date value1, Date value2) {
			addCriterion("`time` between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotBetween(Date value1, Date value2) {
			addCriterion("`time` not between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andPic1IsNull() {
			addCriterion("pic1 is null");
			return (Criteria) this;
		}

		public Criteria andPic1IsNotNull() {
			addCriterion("pic1 is not null");
			return (Criteria) this;
		}

		public Criteria andPic1EqualTo(String value) {
			addCriterion("pic1 =", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1NotEqualTo(String value) {
			addCriterion("pic1 <>", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1GreaterThan(String value) {
			addCriterion("pic1 >", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1GreaterThanOrEqualTo(String value) {
			addCriterion("pic1 >=", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1LessThan(String value) {
			addCriterion("pic1 <", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1LessThanOrEqualTo(String value) {
			addCriterion("pic1 <=", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1Like(String value) {
			addCriterion("pic1 like", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1NotLike(String value) {
			addCriterion("pic1 not like", value, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1In(List<String> values) {
			addCriterion("pic1 in", values, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1NotIn(List<String> values) {
			addCriterion("pic1 not in", values, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1Between(String value1, String value2) {
			addCriterion("pic1 between", value1, value2, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic1NotBetween(String value1, String value2) {
			addCriterion("pic1 not between", value1, value2, "pic1");
			return (Criteria) this;
		}

		public Criteria andPic2IsNull() {
			addCriterion("pic2 is null");
			return (Criteria) this;
		}

		public Criteria andPic2IsNotNull() {
			addCriterion("pic2 is not null");
			return (Criteria) this;
		}

		public Criteria andPic2EqualTo(String value) {
			addCriterion("pic2 =", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2NotEqualTo(String value) {
			addCriterion("pic2 <>", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2GreaterThan(String value) {
			addCriterion("pic2 >", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2GreaterThanOrEqualTo(String value) {
			addCriterion("pic2 >=", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2LessThan(String value) {
			addCriterion("pic2 <", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2LessThanOrEqualTo(String value) {
			addCriterion("pic2 <=", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2Like(String value) {
			addCriterion("pic2 like", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2NotLike(String value) {
			addCriterion("pic2 not like", value, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2In(List<String> values) {
			addCriterion("pic2 in", values, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2NotIn(List<String> values) {
			addCriterion("pic2 not in", values, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2Between(String value1, String value2) {
			addCriterion("pic2 between", value1, value2, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic2NotBetween(String value1, String value2) {
			addCriterion("pic2 not between", value1, value2, "pic2");
			return (Criteria) this;
		}

		public Criteria andPic3IsNull() {
			addCriterion("pic3 is null");
			return (Criteria) this;
		}

		public Criteria andPic3IsNotNull() {
			addCriterion("pic3 is not null");
			return (Criteria) this;
		}

		public Criteria andPic3EqualTo(String value) {
			addCriterion("pic3 =", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3NotEqualTo(String value) {
			addCriterion("pic3 <>", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3GreaterThan(String value) {
			addCriterion("pic3 >", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3GreaterThanOrEqualTo(String value) {
			addCriterion("pic3 >=", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3LessThan(String value) {
			addCriterion("pic3 <", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3LessThanOrEqualTo(String value) {
			addCriterion("pic3 <=", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3Like(String value) {
			addCriterion("pic3 like", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3NotLike(String value) {
			addCriterion("pic3 not like", value, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3In(List<String> values) {
			addCriterion("pic3 in", values, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3NotIn(List<String> values) {
			addCriterion("pic3 not in", values, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3Between(String value1, String value2) {
			addCriterion("pic3 between", value1, value2, "pic3");
			return (Criteria) this;
		}

		public Criteria andPic3NotBetween(String value1, String value2) {
			addCriterion("pic3 not between", value1, value2, "pic3");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table order_comment
	 * @mbggenerated  Sun Aug 02 16:18:04 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order_comment
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 02 15:14:34 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}